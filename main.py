import os
import qrcode as qr
from telegram import Update
from telegram.ext import Updater ,Application ,CommandHandler ,MessageHandler,filters,ContextTypes

bot_api = os.getenv(
"TELEGRAM_BOT_API"
)

def qr_code_generator(text):
    
    qr_code = qr.make(text)
    qr_code.save("qrcode.png")

async def start(update:Update ,context:ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Please Send Your Text. It generates QR codes from text.")

async def about(update:Update,context:ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("This is a simple QR code generator bot Generated by SIKANDER.")

async def help_command(update:Update,context:ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Simpley send your text \nBot automaticaly make QR code of given text for you")

async def handel_text(update:Update, context=ContextTypes.DEFAULT_TYPE):
    user_text=update.message.text
    qr_code_generator(user_text)

    with open("qrcode.png","rb") as photo:
        await update.message.reply_photo(photo)


def main() -> None:
    application = Application.builder().token(bot_api).build()

    # Register handlers
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("generate", generate_qr))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # Webhook setup for Render
    PORT = int(os.environ.get("PORT", 5000))
    WEBHOOK_URL = "https://your-render-app-name.onrender.com"  # Replace with your Render URL

    async def on_startup(app):
        await app.bot.set_webhook(WEBHOOK_URL)

    application.run_webhook(
        listen="0.0.0.0",
        port=PORT,
        webhook_url=WEBHOOK_URL,
        on_startup=on_startup
    )

if __name__ == "__main__":
    main()
