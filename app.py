import os
import qrcode as qr
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from flask import Flask, request
import logging

logging.basicConfig(level=logging.INFO)

# Load bot API token and webhook URL from environment variables
bot_api = os.getenv("TELEGRAM_BOT_API_KEY")
webhook_url = os.getenv("WEBHOOK_URL")

# Initialize Flask app
app = Flask(__name__)

telegram_app = None  # Placeholder for the Telegram bot application


def qr_code_generator(text):
    try:
        qr_code = qr.make(text)
        file_name = "qrcode.png"
        qr_code.save(file_name)
        return file_name
    except Exception as e:
        logging.error(f"Error generating QR code: {e}")
        return None


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Please send your text. It generates QR codes from text.")


async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("This is a simple QR code generator bot generated by Sikander.")


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("Simply send your text, and the bot will automatically create a QR code for you.")


async def handel_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text
    qr_code_file = qr_code_generator(user_text)
    if qr_code_file:
        with open(qr_code_file, "rb") as photo:
            await update.message.reply_photo(photo)
    else:
        await update.message.reply_text("Error generating QR code")


@app.route("/webhook", methods=["POST"])
def webhook():
    """Handles webhook updates from Telegram."""
    update = Update.de_json(request.get_json(force=True), telegram_app.bot)
    telegram_app.update_queue.put(update)
    return "OK", 200


if __name__ == "__main__":
    telegram_app = Application.builder().token(bot_api).build()

    telegram_app.add_handler(CommandHandler("start", start))
    telegram_app.add_handler(CommandHandler("help", help_command))
    telegram_app.add_handler(CommandHandler("about", about))
    telegram_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handel_text))

    # Set the webhook
    telegram_app.run_webhook(
        listen="0.0.0.0",
        port=int(os.getenv("PORT", 5000)),
        webhook_url=webhook_url,
    )
